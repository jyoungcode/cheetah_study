@charset "utf-8";
/*! button-effects.css © yamoo9.net, 2016 */

/**
* ----------------------------------------------
* .button
* 버튼 기본 모듈
* -----------------------------------------------------*/
.button {
  cursor: pointer;
  border: none;
  border-bottom: 2px solid #787878;
  /*padding: 4px 8px;*/
  padding: 0.65em 0.85em;
  background: #ececec;
  color: #122122;
  font-size: 1rem;
  /* 별도 */
  /*width: 150px;
  height: 60px;*/
}

.button.button-3d {
  border-bottom: none;
  box-shadow:
    1px 1px 1px #939393,
    2px 2px 1px #939393,
    3px 3px 1px #939393,
    4px 4px 2px #939393,
    5px 5px 3px #939393;
}

.button-round { border-radius: 3px; }
.button-rounder { border-radius: 6px; }
.button-roundest { border-radius: 12px; }

/*.button > span {
  display: inline-block;
}*/


/* button.slide-from-* */
/* 부모 - 버튼 뒤 껍데기 */
button[class*="slide-"] {
  /*overflow: hidden; /* after(자식)이 부모에서 벗어난부분 숨기려고*/
  position: relative; /* 자식의 absolute 위치를 잡아주기 위해 */
  z-index: 1; /* 자식을 감싸기 위한 z-index */
  border: 5px solid #4a43af; /* 겉 껍데기 보더 */
  background: #4a43af;
  color: #fff;
}

/* transition은 적용시킬 요소에 들어간다 */

button[class*="slide-"]::after {
  content: '';
  position: absolute; /* 부모 엘리먼트에 상대적 위치 relative */
  z-index: -1; /* 텍스트 아래로 들어가기 위한 -1 */
  background: #6655fb;
  transition: all 0.3s; /* 트랜지션 될 요소에 적용 */
}

/*button[class*="slide-"]>span {
  /*content: 'SLIDE FROM LEFT';
  content: '';
  position: absolute;
  /*z-index: -1;
  /*border: 3px solid #6655fb;
  /*background: #6655fb;
  /*background: #4a43af;
  color: #fff;
  transition: all 0.3s;
  padding: 0.65em 0.85em;
}*/
button[class*="slide-"]:hover::after,
button[class*="slide-"]:focus::after {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

button.slide-from-left::after {
  top: 0;
  bottom: 0;
  left: -100%;
  right: 100%;
}

button.slide-from-right::after {
  top: 0;
  bottom: 0;
  left: 100%;
  right: -100%;
}

button.slide-from-top::after {
  left: 0;
  right: 0;
  top: -100%;
  bottom: 100%;
}

button.slide-from-bottom::after {
  left: 0;
  right: 0;
  top: 100%;
  bottom: -100%;
}


/* button.grow-* */
button[class*="grow-"] {
  overflow: hidden;
  position: relative;
  z-index: 1;
  border: 4px solid #46d1aa;
  padding: 0.725em 0.9em;
  background: #46d1aa;
  color: #0d392d;
}

button[class*="grow-"]::before {
  content: '';
  position: absolute;
  z-index: -1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: #4ff5c0;
  transition: all 0.3s;
}

button.button-round[class*="grow-"]::before {
  border-radius: 1.5px;
}

button.button-rounder[class*="grow-"]::before {
  border-radius: 3px;
}

button.button-roundest[class*="grow-"]::before {
  border-radius: 6px;
}

button.grow-rectangle::before {
  transform: scale(0);
}

button.grow-rectangle:hover::before,
button.grow-rectangle:focus::before {
  transform: scale(1);
}

button.grow-ellipse::before {
  border-radius: 50%;
  transform: scale(0);
}

button.grow-ellipse:hover::before,
button.grow-ellipse:focus::before {
  transform: scale(1.6);
}

button.grow-circle::before {
  border-radius: 50%;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  margin: -50px 0 0 -50px;
  transform: scale(0);
}

button.grow-circle:hover::before,
button.grow-circle:focus::before {
  transform: scale(1.6);
}

button.grow-skew::before {
  left: 50%;
  right: 50%;
  transform: skewX(45deg);
}
button.grow-skew:hover::before,
button.grow-skew:focus::before {
  left: -20%;
  right: -20%;
}

button.grow-skew-45::before {
  left: 20%;
  right: 80%;
  transform: skewX(-45deg);
}
button.grow-skew-45:hover::before,
button.grow-skew-45:focus::before {
  left: -20%;
  right: -20%;
}

button.grow-spin::before {
  transform: rotate(-180deg) scale(0);
}
button.grow-spin:hover::before,
button.grow-spin:focus::before {
  transform: rotate(0deg) scale(1);
}

button.grow-spin-ccw::before {
  transform: rotate(180deg) scale(0);
}
button.grow-spin-ccw:hover::before,
button.grow-spin-ccw:focus::before {
  transform: rotate(0deg) scale(1);
}

/*transform-origin : left center =  회전축*/

.chr_img {
  width: 100%;
  /*margin-left: auto;
  margin-right: auto;*/
  text-align: center;
}
.chr_img > img {
  /*position: relative;*/
  /*top: -250px;*/
  /*z-index: 1000;*/
  transform-origin: center center;
  transform: scale(1.5) rotate(45deg);
  animation: hold 4s infinite alternate cubic-bezier(0.68, 0.18, 0.13, 0.73);
}

@keyframes hold {
  0% {
    transform: translateY(-113px) scale(0.5) rotate(20deg);
  }
  50% {
    transform: translateY(-113px) scale(0.5) rotate(80deg);
  }
  100% {
    transform: translateY(-113px) scale(0.5) rotate(20deg);
  }
}

/* animation keyframes 벤더피리픽스가 있는게 앞쪽
표준 코드가 뒤쪽에 */
/**
* --------------------------
* 애니메이션 사용법
* --------------------------*/
@keyframes 애니메이션이름 {
from { /*CSS 속성*/}
to { /*CSS 속성 */}
}

/*JS Movieclip*/
/*https://daneden.github.io/animate.css/*/
